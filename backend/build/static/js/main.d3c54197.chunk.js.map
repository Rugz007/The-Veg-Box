{"version":3,"sources":["containers/Sales.js","App.js","reportWebVitals.js","index.js"],"names":["loading","Option","Select","oldInput","newInput","oldInputJSON","Sales","useState","data","setData","id","item_name","rate","quantity","discounted_rate","subtotal","item_unit","inputList","setInputList","total","setTotal","name","setName","phone","setPhone","payment","setPayment","orderID","setOrderID","useEffect","axios","get","headers","then","res","results","catch","err","alert","handleAddClick","handleInputChange","e","index","target","value","test","list","toFixed","parseFloat","reduce","prev","next","className","gutter","span","size","onClick","style","width","height","danger","type","regex","length","order","biller","customer_name","customer_phone","mode_of_payment","orderJSON","JSON","stringify","post","response","orderItems","tempDict","item_rate","item","push","orderItemsJSON","message","success","window","open","error","put","console","log","disabled","fontSize","placeholder","onChange","handleNameChange","maxLength","handlePhoneChange","Group","defaultValue","buttonStyle","handlePaymentChange","Button","map","x","i","splice","handleRemoveClick","showSearch","optionFilterProp","onSelect","unit","handleSelectedItem","suffix","prefix","background","borderColor","textAlign","App","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+UAKIA,G,QAAU,GACNC,EAAWC,IAAXD,OACJE,EAAW,GACXC,EAAW,GACXC,EAAe,KA0bJC,EAvbD,WAAO,IAAD,EACQC,mBAAS,IADjB,mBACTC,EADS,KACHC,EADG,OAEkBF,mBAAS,CAAC,CAAEG,GAAI,GAAIC,UAAU,GAAIC,KAAM,GAAIC,SAAU,GAAIC,gBAAiB,GAAIC,SAAS,GAAIC,UAAW,MAFzH,mBAETC,EAFS,KAEEC,EAFF,OAGUX,mBAAS,GAHnB,mBAGTY,EAHS,KAGFC,EAHE,OAIQb,mBAAS,IAJjB,mBAITc,EAJS,KAIHC,EAJG,OAKUf,mBAAS,IALnB,mBAKTgB,EALS,KAKFC,EALE,OAMcjB,mBAAS,QANvB,mBAMTkB,EANS,KAMAC,EANA,OAOcnB,mBAAS,GAPvB,mBAOToB,EAPS,KAOAC,EAPA,KAShBC,qBAAU,WACNC,IAAMC,IAAN,iCACI,CACIC,QACA,CACI,eAAgB,sBAErBC,MAAK,SAACC,GACLlC,GAAU,EACVS,EAAQyB,EAAI1B,KAAK2B,YAClBC,OAAM,SAACC,GACNC,MAAMD,QAGf,IAEH,IAYME,EAAiB,WACnBrB,EAAa,GAAD,mBAAKD,GAAL,CAAgB,CAAEP,GAAI,GAAIC,UAAU,GAAIC,KAAM,GAAIC,SAAU,GAAIC,gBAAiB,GAAIC,SAAS,GAAIC,UAAW,QAwNvHwB,EAAoB,SAACC,EAAGC,GAG1B,GAAuB,KAAnBD,EAAEE,OAAOC,OAFC,WAEqBC,KAAKJ,EAAEE,OAAOC,OACjD,CAAC,IAAD,EAC4BH,EAAEE,OAAlBtB,EADZ,EACYA,KAAMuB,EADlB,EACkBA,MACRE,EAAI,YAAO7B,GACK,MAAlBwB,EAAEE,OAAOC,OAAoC,KAApBE,EAAKJ,GAAOrB,GACrCyB,EAAKJ,GAAOrB,GAAQ,KAEpByB,EAAKJ,GAAOrB,GAAQuB,EACO,KAA5BE,EAAKJ,GAAL,UAA0D,KAAxBI,EAAKJ,GAAL,MAAiE,KAAnCI,EAAKJ,GAAL,kBAC/DI,EAAKJ,GAAL,UAA2BI,EAAKJ,GAAL,SAA0BI,EAAKJ,GAAL,MAAqBK,QAAQ,IACvD,KAA5BD,EAAKJ,GAAL,UAA0D,KAAxBI,EAAKJ,GAAL,MAAiE,KAAnCI,EAAKJ,GAAL,kBAC/DI,EAAKJ,GAAL,UAA2BI,EAAKJ,GAAL,SAA0BI,EAAKJ,GAAL,iBAAgCK,QAAQ,IAClE,KAA5BD,EAAKJ,GAAL,UAAqE,KAAnCI,EAAKJ,GAAL,kBACjCI,EAAKJ,GAAL,SAA0B,IAC9BxB,EAAa4B,GACb1B,EAAS4B,WAAYF,EAAKG,QAAO,SAACC,EAAKC,GAAN,OAAeD,EAAOF,WAAWG,EAAKpC,YAAU,GAAIgC,QAAQ,OA8BrG,OACI,sBAAKK,UAAU,YAAf,UACI,2BACA,eAAC,IAAD,CAAKC,OAAQ,GAAb,UACI,cAAC,IAAD,CAAKC,KAAM,EAAX,SACI,cAAC,IAAD,CAAQC,KAAK,QAAQC,QA1QV,WACvBtC,EAAa,CAAC,CAAER,GAAI,GAAIC,UAAU,GAAIC,KAAM,GAAIC,SAAU,GAAIC,gBAAiB,GAAIC,SAAS,GAAIC,UAAW,MAC3GI,EAAS,GACTI,EAAS,IACTF,EAAQ,IACRM,EAAW,GACXF,EAAW,SAoQmD+B,MAAO,CAACC,MAAM,OAAQC,OAAQ,QAASC,QAAM,EAA/F,0CAEJ,cAAC,IAAD,CAAKN,KAAM,KACX,cAAC,IAAD,CAAKA,KAAM,EAAX,SACI,cAAC,IAAD,CAAQO,KAAK,UAAUN,KAAK,QAAQC,QArQ3B,WAGrB,IAFA,IAAId,EAAQ,EACNoB,EAAS,oBACRpB,EAAQzB,EAAU8C,QAAQ,CAC7B,GAAmC,KAA/B9C,EAAUyB,GAAO/B,UACjB,OAAO2B,MAAM,iCACjB,GAAkC,KAA9BrB,EAAUyB,GAAO7B,SACjB,OAAOyB,MAAM,kCACjB,IAAKwB,EAAMjB,KAAK5B,EAAUyB,GAAO7B,UAC7B,OAAOyB,MAAM,+BACjB,IAAKwB,EAAMjB,KAAK5B,EAAUyB,GAAO5B,kBAAyD,KAArCG,EAAUyB,GAAO5B,gBAClE,OAAOwB,MAAM,sCACjBI,IAEJ,GAAgB,IAAZf,EACJ,CACI,IAAIqC,EAAQ,CACRC,OAAQ,EACRC,cAAe7C,EACf8C,eAAgB5C,EAChBJ,MAAOA,EACPiD,gBAAiB3C,GAEjB4C,EAAYC,KAAKC,UAAUP,GAC/B,IACIlC,IAAM0C,KAAN,0CACYH,EACA,CACIrC,QACA,CACI,eAAgB,sBAGtBC,MAAK,SAACwC,GACJ7C,EAAW6C,EAASjE,KAAKE,IAUzB,IATA,IAAIgE,EAAa,GACbC,EAAW,CACX9D,SAAU,GACV+D,UAAW,GACX9D,gBAAiB,GACjBkD,MAAO,GACPa,KAAM,IAENnC,EAAQ,EACLA,EAAQzB,EAAU8C,QAEjBY,EADqC,KAArC1D,EAAUyB,GAAO5B,gBACN,CACPD,SAAUI,EAAUyB,GAAO7B,SAC3B+D,UAAW3D,EAAUyB,GAAO9B,KAC5BE,gBAAiB,EACjBkD,MAAOS,EAASjE,KAAKE,GACrBmE,KAAM5D,EAAUyB,GAAOhC,IAGhB,CACPG,SAAUI,EAAUyB,GAAO7B,SAC3B+D,UAAW3D,EAAUyB,GAAO9B,KAC5BE,gBAAiBG,EAAUyB,GAAO5B,gBAClCkD,MAAOS,EAASjE,KAAKE,GACrBmE,KAAM5D,EAAUyB,GAAOhC,IAE/BgE,EAAWI,KAAKH,GAChBjC,IAEJ,IAAIqC,EAAiBT,KAAKC,UAAUG,GACpC,IACI5C,IAAM0C,KAAN,+CACQO,EACA,CACI/C,QACA,CACI,eAAgB,sBAG9BC,MAAK,SAACC,GACJ8C,IAAQC,QAAQ,+BAGhB,IAFA,IAAIvC,EAAQ,EACNI,EAAI,YAAO7B,GACVyB,EAAQI,EAAKiB,QAChB5D,EAAS2E,KAAKhC,EAAKJ,IACnBA,IAEJrC,EAAeiE,KAAKC,UAAUpE,GAC9B+E,OAAOC,KAAK,+BAA+BV,EAASjE,KAAKE,GAAG,QAElE,MAAO0E,GACL9C,MAAM8C,OAG5B,MAAOA,GACL9C,MAAM8C,QAGV,CACA1C,EAAQ,EACRtC,EAAW,GAEX,IADA,IAAM0C,EAAI,YAAO7B,GACVyB,EAAQI,EAAKiB,QAChB3D,EAAS0E,KAAKhC,EAAKJ,IACnBA,IAGJ,GADe4B,KAAKC,UAAUnE,KACVC,EAEhB6E,OAAOC,KAAK,+BAA+BxD,EAAQ,SAGvD,CACIqC,EAAQ,CACJC,OAAQ,EACRC,cAAe7C,EACf8C,eAAgB5C,EAChBJ,MAAOA,EACPiD,gBAAiB3C,GAErB4C,EAAYC,KAAKC,UAAUP,GAC3B,IACIlC,IAAMuD,IAAI,6CAA8C1D,EAA9C,IACN0C,EACA,CACIrC,QACA,CACI,eAAgB,sBAI/B,MAAOoD,GACJ9C,MAAM8C,GAGV,IACItD,IAAMC,IAAI,kDAAmDJ,EAAnD,IACF,CACIK,QACA,CACI,eAAgB,sBAG9BC,MAAK,SAACC,GAUJ,IATA,IAAIwC,EAAa,GACbC,EAAW,CACX9D,SAAU,GACV+D,UAAW,GACX9D,gBAAiB,GACjBkD,MAAO,GACPa,KAAM,IAENnC,EAAQ,EACLA,EAAQzB,EAAU8C,QAEjBY,EADqC,KAArC1D,EAAUyB,GAAO5B,gBACN,CACPD,SAAUI,EAAUyB,GAAO7B,SAC3B+D,UAAW3D,EAAUyB,GAAO9B,KAC5BE,gBAAiB,EACjBkD,MAAOrC,EACPkD,KAAM5D,EAAUyB,GAAOhC,IAGhB,CACPG,SAAUI,EAAUyB,GAAO7B,SAC3B+D,UAAW3D,EAAUyB,GAAO9B,KAC5BE,gBAAiBG,EAAUyB,GAAO5B,gBAClCkD,MAAOrC,EACPkD,KAAM5D,EAAUyB,GAAOhC,IAE/BgE,EAAWI,KAAKH,GAChBjC,IAEJ,IAAIqC,EAAiBT,KAAKC,UAAUG,GACpCY,QAAQC,IAAIR,GACZ,IACIjD,IAAM0C,KAAN,+CACQO,EACA,CACI/C,QACA,CACI,eAAgB,sBAG9BC,MAAK,SAACC,GACJ8C,IAAQC,QAAQ,+BAGhB,IAFA,IAAIvC,EAAQ,EACNI,EAAI,YAAO7B,GACVyB,EAAQI,EAAKiB,QAChB5D,EAAS2E,KAAKhC,EAAKJ,IACnBA,IAEJrC,EAAeiE,KAAKC,UAAUpE,GAC9B+E,OAAOC,KAAK,+BAA+BxD,EAAQ,QAEzD,MAAOyD,GACL9C,MAAM8C,OAGhB,MAAOA,GACL9C,MAAM8C,OAkEyD3B,MAAO,CAACC,MAAM,OAAQC,OAAQ,QAAS6B,SAAkC,KAAvBvE,EAAU,GAAV,GAAjH,iCAGR,uBACA,uBACA,uBACA,eAAC,IAAD,CAAKoC,OAAQ,GAAb,UACI,cAAC,IAAD,CAAKC,KAAM,EAAGG,MAAO,CAACgC,SAAU,QAAhC,SACI,gDAEJ,cAAC,IAAD,CAAKnC,KAAM,EAAGG,MAAO,CAACgC,SAAU,QAAhC,SACI,+CAEJ,cAAC,IAAD,CAAKnC,KAAM,EAAGG,MAAO,CAACgC,SAAU,QAAhC,SACI,+CAEJ,cAAC,IAAD,CAAKnC,KAAM,EAAGG,MAAO,CAACgC,SAAU,QAAhC,SACI,iDAGR,uBACA,eAAC,IAAD,CAAKpC,OAAQ,GAAb,UACI,cAAC,IAAD,CAAKC,KAAM,EAAX,SACI,cAAC,IAAD,CAAOoC,YAAY,gBAAgBnC,KAAK,QAAQoC,SAAU,SAAAlD,GAAC,OAlDlD,SAACA,IAEC,KAAnBA,EAAEE,OAAOC,OADD,eACuBC,KAAKJ,EAAEE,OAAOC,SAC7CtB,EAAQmB,EAAEE,OAAOC,OA+CsDgD,CAAiBnD,IAAIG,MAAOvB,EAAMwE,UAAU,UAE/G,cAAC,IAAD,CAAKvC,KAAM,EAAX,SACI,cAAC,IAAD,CAAOoC,YAAY,eAAenC,KAAK,QAAQoC,SAAU,SAAAlD,GAAC,OA9ChD,SAACA,IAEA,KAAnBA,EAAEE,OAAOC,OADC,aACqBC,KAAKJ,EAAEE,OAAOC,SAC7CpB,EAASiB,EAAEE,OAAOC,OA2CoDkD,CAAkBrD,IAAIG,MAAOrB,EAAOsE,UAAU,SAEhH,cAAC,IAAD,CAAKvC,KAAM,EAAX,SACI,eAAC,IAAMyC,MAAP,CAAaC,aAAa,OAAOC,YAAY,QAAQN,SAAU,SAAAlD,GAAC,OA1CpD,SAACA,GACzBf,EAAWe,EAAEE,OAAOC,OAyC4DsD,CAAoBzD,IAAIG,MAAOnB,EAAS8B,KAAK,QAAjH,UACI,cAAC,IAAM4C,OAAP,CAAcvD,MAAM,OAApB,kBACA,cAAC,IAAMuD,OAAP,CAAcvD,MAAM,OAApB,kBACA,cAAC,IAAMuD,OAAP,CAAcvD,MAAM,MAApB,sBAGR,cAAC,IAAD,CAAKU,KAAM,EAAX,SACI,cAAC,IAAD,CAAOC,KAAK,QAAQX,MAAOjB,EAAS6D,UAAQ,SAGpD,uBACA,uBACA,uBACA,uBACA,eAAC,IAAD,CAAKnC,OAAQ,GAAb,UACI,cAAC,IAAD,CAAKC,KAAM,IAEX,cAAC,IAAD,CAAKA,KAAM,EAAGG,MAAO,CAACgC,SAAU,QAAhC,SACI,8CAEJ,cAAC,IAAD,CAAKnC,KAAM,EAAGG,MAAO,CAACgC,SAAU,QAAhC,SACI,2CAEJ,cAAC,IAAD,CAAKnC,KAAM,EAAGG,MAAO,CAACgC,SAAU,QAAhC,SACI,uCAEJ,cAAC,IAAD,CAAKnC,KAAM,EAAGG,MAAO,CAACgC,SAAU,QAAhC,SACI,kDAEJ,cAAC,IAAD,CAAKnC,KAAM,EAAGG,MAAO,CAACgC,SAAU,QAAhC,SACI,8CAGR,uBACCzF,GAAW,iCAAQ,cAAC,IAAD,OAEfA,GAEDiB,EAAUmF,KAAI,SAACC,EAAGC,GAClB,OACI,gCACI,eAAC,IAAD,CAAKjD,OAAQ,GAAb,UACI,cAAC,IAAD,CAAKC,KAAM,EAAX,SAC0B,IAArBrC,EAAU8C,QAAgB,cAAC,IAAD,CAAQR,KAAK,QAAQC,QAAS,kBA1G3D,SAAAd,GACtB,IAAMI,EAAI,YAAO7B,GACjB6B,EAAKyD,OAAO7D,EAAO,GACnBxB,EAAa4B,GACb1B,EAAS4B,WAAYF,EAAKG,QAAO,SAACC,EAAKC,GAAN,OAAeD,EAAOF,WAAWG,EAAKpC,YAAU,GAAIgC,QAAQ,KAsGNyD,CAAkBF,IAAI1C,QAAM,EAAhE,sBAE/B,cAAC,IAAD,CAAKN,KAAM,EAAX,SACI,cAAC,IAAD,CACImD,YAAU,EACVf,YAAY,iBACZgB,iBAAiB,WACjBnD,KAAK,QACLE,MAAO,CAAEC,MAAO,KAChBiD,SAAU,SAAAlE,GAAC,OA/WhB,SAACA,EAAGC,GAC3B,IAAMI,EAAI,YAAO7B,GACjB6B,EAAKJ,GAAL,GAAoBlC,EAAKiC,EAAE,GAAG/B,GAC9BoC,EAAKJ,GAAL,KAAsBlC,EAAKiC,EAAE,GAAG7B,KAChCkC,EAAKJ,GAAL,UAA2BlC,EAAKiC,EAAE,GAAG9B,UACrCmC,EAAKJ,GAAL,UAA2BlC,EAAKiC,EAAE,GAAGmE,KACrC9D,EAAKJ,GAAL,gBAAiC,GACjCI,EAAKJ,GAAL,SAA0B,GAC1BI,EAAKJ,GAAL,SAA0B,GAC1BxB,EAAa4B,GAsW8B+D,CAAmBpE,EAAG6D,IACrC1D,MAAOyD,EAAE1F,UACTU,KAAK,KART,SAUI,mCACKb,EAAK4F,KAAI,SAACvB,GAAD,OAAW,eAAC5E,EAAD,WAAuB4E,EAAKlE,UAA5B,MAAakE,EAAKnE,aAInD,cAAC,IAAD,CAAK4C,KAAM,EAAX,SACI,cAAC,IAAD,CAAOjC,KAAK,WAAWkC,KAAK,QAAQuD,OAAQT,EAAErF,UAAW4B,MAAOyD,EAAExF,SAAU8E,SAAU,SAAAlD,GAAC,OAAID,EAAkBC,EAAG6D,IAAId,UAAWa,EAAE1F,cAErI,cAAC,IAAD,CAAK2C,KAAM,EAAX,SACI,cAAC,IAAD,CAAOjC,KAAK,OAAOkC,KAAK,QAAQwD,OAAuB,KAAdV,EAAErF,UAAkB,GAAK,SAAK8F,OAAuB,KAAdT,EAAErF,UAAkB,GAAK,MAAOqF,EAAErF,UAAW4B,MAAOyD,EAAEzF,KAAM+E,SAAU,SAAAlD,GAAC,OAAID,EAAkBC,EAAG6D,IAAId,UAAQ,MAEhM,cAAC,IAAD,CAAKlC,KAAM,EAAX,SACI,cAAC,IAAD,CAAOjC,KAAK,kBAAkBqE,YAAa,WAAWnC,KAAK,QAAQwD,OAAuB,KAAdV,EAAErF,UAAkB,GAAK,SAAK8F,OAAuB,KAAdT,EAAErF,UAAkB,GAAK,MAAOqF,EAAErF,UAAW4B,MAAOyD,EAAEvF,gBAAiB6E,SAAU,SAAAlD,GAAC,OAAID,EAAkBC,EAAG6D,IAAId,UAAWa,EAAE1F,cAEnP,cAAC,IAAD,CAAK2C,KAAM,EAAX,SACI,cAAC,IAAD,CAAOjC,KAAK,WAAWkC,KAAK,QAAQwD,OAAuB,KAAdV,EAAErF,UAAkB,GAAK,SAAK4B,MAAOyD,EAAEtF,SAAU4E,SAAU,SAAAlD,GAAC,OAAID,EAAkBC,EAAG6D,IAAId,UAAQ,SAGtJ,uBACA,uBACCvE,EAAU8C,OAAS,IAAMuC,GAAK,cAAC,IAAD,CAAQzC,KAAK,UAAUN,KAAK,QAAQC,QAASjB,EAAgBkB,MAAO,CAACC,MAAM,OAAQsD,WAAY,UAAWC,YAAa,UAAWtD,OAAQ,QAA1I,uBAI3C,uBACA,uBACA,eAAC,IAAD,CAAKN,OAAQ,GAAb,UACI,cAAC,IAAD,CAAKC,KAAM,IACX,cAAC,IAAD,CAAKA,KAAM,IACX,cAAC,IAAD,CAAKA,KAAM,IACX,cAAC,IAAD,CAAKA,KAAM,IACX,cAAC,IAAD,CAAKA,KAAM,EAAGG,MAAO,CAACyD,UAAW,QAASzB,SAAU,QAApD,SACI,wCAEJ,cAAC,IAAD,CAAKnC,KAAM,EAAGG,MAAO,CAACyD,UAAW,QAASzB,SAAU,QAApD,SACI,yCAAOtE,UAGf,2BC3aGgG,MAbf,WACE,OACE,8BACE,cAAC,IAAD,UACE,cAAC,IAAD,UAEE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWhH,WCA5BiH,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBxF,MAAK,YAAkD,IAA/CyF,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.d3c54197.chunk.js","sourcesContent":["import { useEffect, useState } from 'react'\nimport axios from 'axios';\nimport { Spin, Select, Col, Row, Input, Button, Radio, message } from \"antd\";\nimport '../css/Sales.css';\n\nvar loading = true;\nconst { Option } = Select;\nvar oldInput = [];\nvar newInput = [];\nvar oldInputJSON = null;\nvar newInputJSON = null;\n\nconst Sales = () => {\n    const [data, setData] = useState([]);\n    const [inputList, setInputList] = useState([{ id: \"\", item_name:\"\", rate: \"\", quantity: \"\", discounted_rate: \"\", subtotal:\"\", item_unit: \"\" }]);\n    const [total, setTotal] = useState(0);\n    const [name, setName] = useState(\"\");\n    const [phone, setPhone] = useState(\"\");\n    const [payment, setPayment] = useState(\"CASH\");\n    const [orderID, setOrderID] = useState(0);\n\n    useEffect(() => {\n        axios.get(`http://0.0.0.0:8000/api/items/`,\n            {\n                headers:\n                {\n                    'Content-Type': 'application/json'\n                }\n            }).then((res) => {\n                loading = false;\n                setData(res.data.results);\n            }).catch((err) => {\n                alert(err);\n            });\n        \n    }, []);\n\n    const handleSelectedItem = (e, index) => {\n        const list = [...inputList];\n        list[index][\"id\"] = data[e-1].id\n        list[index][\"rate\"] = data[e-1].rate;\n        list[index][\"item_name\"] = data[e-1].item_name;\n        list[index][\"item_unit\"] = data[e-1].unit;\n        list[index][\"discounted_rate\"] = \"\";\n        list[index][\"subtotal\"] = \"\";\n        list[index][\"quantity\"] = \"\";\n        setInputList(list);\n    }\n\n    const handleAddClick = () => {\n        setInputList([...inputList, { id: \"\", item_name:\"\", rate: \"\", quantity: \"\", discounted_rate: \"\", subtotal:\"\", item_unit: \"\" }]);\n    };\n\n    const handleNewBillClick = () => {\n        setInputList([{ id: \"\", item_name:\"\", rate: \"\", quantity: \"\", discounted_rate: \"\", subtotal:\"\", item_unit: \"\" }]);\n        setTotal(0);\n        setPhone(\"\");\n        setName(\"\");\n        setOrderID(0);\n        setPayment(\"CASH\");\n    };\n\n    const handlePrintClick = () => {\n        var index = 0;\n        const regex =  /^\\d+(\\.\\d{0,2})?$/;\n        while (index < inputList.length) { \n            if (inputList[index].item_name === \"\")\n                return alert(\"Error! Empty row not allowed!\");\n            if (inputList[index].quantity === \"\")\n                return alert(\"Error! Quantity not specified!\");\n            if (!regex.test(inputList[index].quantity))\n                return alert(\"Error! Quantity is invalid!\");\n            if (!regex.test(inputList[index].discounted_rate) && inputList[index].discounted_rate !== \"\")\n                return alert(\"Error! Discounted Rate is invalid!\");\n            index++; \n        }\n        if (orderID === 0)\n        {\n            var order = {\n                biller: 1,\n                customer_name: name, \n                customer_phone: phone,\n                total: total,\n                mode_of_payment: payment\n            }\n            var orderJSON = JSON.stringify(order);\n            try {\n                axios.post(`http://0.0.0.0:8000/api/sales/addorder/`,\n                            orderJSON,\n                            {\n                                headers:\n                                {\n                                    'Content-Type': 'application/json'\n                                }\n                            }\n                            ).then((response)=>{\n                                setOrderID(response.data.id);\n                                var orderItems = [];\n                                var tempDict = {\n                                    quantity: \"\",\n                                    item_rate: \"\",\n                                    discounted_rate: \"\",\n                                    order: \"\",\n                                    item: \"\"\n                                };\n                                var index = 0\n                                while (index < inputList.length) { \n                                    if (inputList[index].discounted_rate === \"\")\n                                        tempDict = {\n                                            quantity: inputList[index].quantity,\n                                            item_rate: inputList[index].rate,\n                                            discounted_rate: 0,\n                                            order: response.data.id,\n                                            item: inputList[index].id\n                                        };\n                                    else\n                                        tempDict = {\n                                            quantity: inputList[index].quantity,\n                                            item_rate: inputList[index].rate,\n                                            discounted_rate: inputList[index].discounted_rate,\n                                            order: response.data.id,\n                                            item: inputList[index].id\n                                        };\n                                    orderItems.push(tempDict);\n                                    index++; \n                                }\n                                var orderItemsJSON = JSON.stringify(orderItems);\n                                try {\n                                    axios.post(`http://0.0.0.0:8000/api/sales/addorderitems/`,\n                                            orderItemsJSON,\n                                            {\n                                                headers:\n                                                {\n                                                    'Content-Type': 'application/json'\n                                                }\n                                            }\n                                    ).then((res)=>{\n                                        message.success('Order Created Successfully!');\n                                        var index = 0\n                                        const list = [...inputList];\n                                        while (index < list.length) { \n                                            oldInput.push(list[index]);\n                                            index++; \n                                        }\n                                        oldInputJSON = JSON.stringify(oldInput);\n                                        window.open('http://0.0.0.0:8000/receipt/'+response.data.id+'/');\n                                    });\n                                } catch (error) {\n                                    alert(error);\n                                }\n                            })\n            } catch (error) {\n                alert(error);\n            }\n        }\n        else{\n            index = 0;\n            newInput = [];\n            const list = [...inputList];\n            while (index < list.length) { \n                newInput.push(list[index]);\n                index++;\n            }\n            newInputJSON = JSON.stringify(newInput)\n            if(newInputJSON === oldInputJSON)\n            {\n                window.open('http://0.0.0.0:8000/receipt/'+orderID+'/');\n            }\n            else\n            {\n                order = {\n                    biller: 1,\n                    customer_name: name, \n                    customer_phone: phone,\n                    total: total,\n                    mode_of_payment: payment\n                }\n                orderJSON = JSON.stringify(order);\n                try{\n                    axios.put(`http://0.0.0.0:8000/api/sales/updateorder/`+ orderID +`/`,\n                        orderJSON,\n                        {\n                            headers:\n                            {\n                                'Content-Type': 'application/json'\n                            }\n                        }\n                    );\n                }catch (error) {\n                    alert(error);\n                }\n                \n                try {\n                    axios.get(`http://0.0.0.0:8000/api/sales/deleteorderitems/`+ orderID +`/`,\n                            {\n                                headers:\n                                {\n                                    'Content-Type': 'application/json'\n                                }\n                            }\n                    ).then((res)=>{\n                        var orderItems = [];\n                        var tempDict = {\n                            quantity: \"\",\n                            item_rate: \"\",\n                            discounted_rate: \"\",\n                            order: \"\",\n                            item: \"\"\n                        };\n                        var index = 0\n                        while (index < inputList.length) { \n                            if (inputList[index].discounted_rate === \"\")\n                                tempDict = {\n                                    quantity: inputList[index].quantity,\n                                    item_rate: inputList[index].rate,\n                                    discounted_rate: 0,\n                                    order: orderID,\n                                    item: inputList[index].id\n                                };\n                            else\n                                tempDict = {\n                                    quantity: inputList[index].quantity,\n                                    item_rate: inputList[index].rate,\n                                    discounted_rate: inputList[index].discounted_rate,\n                                    order: orderID,\n                                    item: inputList[index].id\n                                };\n                            orderItems.push(tempDict);\n                            index++; \n                        }\n                        var orderItemsJSON = JSON.stringify(orderItems);\n                        console.log(orderItemsJSON);\n                        try {\n                            axios.post(`http://0.0.0.0:8000/api/sales/addorderitems/`,\n                                    orderItemsJSON,\n                                    {\n                                        headers:\n                                        {\n                                            'Content-Type': 'application/json'\n                                        }\n                                    }\n                            ).then((res)=>{\n                                message.success('Order Updated Successfully!');\n                                var index = 0\n                                const list = [...inputList];\n                                while (index < list.length) { \n                                    oldInput.push(list[index]);\n                                    index++; \n                                }\n                                oldInputJSON = JSON.stringify(oldInput);\n                                window.open('http://0.0.0.0:8000/receipt/'+orderID+'/');\n                            });\n                        } catch (error) {\n                            alert(error);\n                        }\n                    });\n                } catch (error) {\n                    alert(error);\n                }\n\n                \n            }\n        }\n    };\n\n    // handle input change\n    const handleInputChange = (e, index) => {\n        const regex = /^[\\d.]+$/;\n        \n        if (e.target.value === \"\" || regex.test(e.target.value))\n        {   \n            const { name, value } = e.target;\n            const list = [...inputList];\n            if (e.target.value ===\".\" && list[index][name]===\"\")\n                list[index][name] = \"0.\";\n            else\n                list[index][name] = value;\n            if(list[index][\"quantity\"] !== \"\" && list[index][\"rate\"] !== \"\" && list[index][\"discounted_rate\"] === \"\")\n                list[index][\"subtotal\"] = (list[index][\"quantity\"] * list[index][\"rate\"]).toFixed(2);\n            if(list[index][\"quantity\"] !== \"\" && list[index][\"rate\"] !== \"\" && list[index][\"discounted_rate\"] !== \"\")\n                list[index][\"subtotal\"] = (list[index][\"quantity\"] * list[index][\"discounted_rate\"]).toFixed(2);\n            if(list[index][\"quantity\"] === \"\" && list[index][\"discounted_rate\"] === \"\")\n                list[index][\"subtotal\"] = \"\";\n            setInputList(list);\n            setTotal(parseFloat((list.reduce((prev,next) => prev + parseFloat(next.subtotal),0)).toFixed(2)));\n        }\n    };\n\n    // handle click event of the Remove button\n    const handleRemoveClick = index => {\n        const list = [...inputList];\n        list.splice(index, 1);\n        setInputList(list);\n        setTotal(parseFloat((list.reduce((prev,next) => prev + parseFloat(next.subtotal),0)).toFixed(2)));\n    };\n\n    const handleNameChange = (e) => {\n        var regex = /^[a-zA-Z ]*$/;\n        if (e.target.value === \"\" || regex.test(e.target.value)) {\n            setName(e.target.value);\n        }\n    }\n\n    const handlePhoneChange = (e) => {\n        const regex = /^[0-9\\b]+$/;\n        if (e.target.value === \"\" || regex.test(e.target.value)) {\n            setPhone(e.target.value);\n        }\n    }\n\n    const handlePaymentChange = (e) => {\n        setPayment(e.target.value);\n    }\n\n    return (\n        <div className=\"sales-div\">\n            <center></center>\n            <Row gutter={12}>\n                <Col span={6}>\n                    <Button size=\"large\" onClick={handleNewBillClick} style={{width:\"100%\", height: \"50px\"}} danger>New Receipt / Clear Fields</Button>\n                </Col>\n                <Col span={12}/>\n                <Col span={6}>\n                    <Button type=\"primary\" size=\"large\" onClick={handlePrintClick} style={{width:\"100%\", height: \"50px\"}} disabled={(inputList[0][\"id\"] !== \"\")? false:true}>Save and Print</Button>\n                </Col>\n            </Row>\n            <br/>\n            <br/>\n            <br/>\n            <Row gutter={24}>\n                <Col span={8} style={{fontSize: \"16px\"}}>\n                    <b>Customer Name</b>\n                </Col>\n                <Col span={6} style={{fontSize: \"16px\"}}>\n                    <b>Phone Number</b>\n                </Col>\n                <Col span={5} style={{fontSize: \"16px\"}}>\n                    <b>Payment Mode</b>\n                </Col>\n                <Col span={5} style={{fontSize: \"16px\"}}>\n                    <b>Bill Number</b>\n                </Col>\n            </Row>\n            <br/>\n            <Row gutter={24}>\n                <Col span={8}>\n                    <Input placeholder=\"Customer Name\" size=\"large\" onChange={e => handleNameChange(e)} value={name} maxLength=\"100\"/>\n                </Col>\n                <Col span={6}>\n                    <Input placeholder=\"Phone Number\" size=\"large\" onChange={e => handlePhoneChange(e)} value={phone} maxLength=\"10\"/>\n                </Col>\n                <Col span={5}>\n                    <Radio.Group defaultValue=\"CASH\" buttonStyle=\"solid\" onChange={e => handlePaymentChange(e)} value={payment} size=\"large\">\n                        <Radio.Button value=\"CASH\">Cash</Radio.Button>\n                        <Radio.Button value=\"CARD\">Card</Radio.Button>\n                        <Radio.Button value=\"UPI\">UPI</Radio.Button>\n                    </Radio.Group>\n                </Col>\n                <Col span={5}>\n                    <Input size=\"large\" value={orderID} disabled/>\n                </Col>\n            </Row>\n            <br/>\n            <br/>\n            <br/>\n            <br/>\n            <Row gutter={24}>\n                <Col span={2}>\n                </Col>\n                <Col span={6} style={{fontSize: \"16px\"}}>\n                    <b>Particulars</b>\n                </Col>\n                <Col span={4} style={{fontSize: \"16px\"}}>\n                    <b>Quantity</b>\n                </Col>\n                <Col span={4} style={{fontSize: \"16px\"}}>\n                    <b>Rate</b>\n                </Col>\n                <Col span={4} style={{fontSize: \"16px\"}}>\n                    <b>Discounted Rate</b>\n                </Col>\n                <Col span={4} style={{fontSize: \"16px\"}}>\n                    <b>Subtotal</b>\n                </Col>\n            </Row>\n            <br/>\n            {loading && <center><Spin /></center>}\n            {\n                !loading \n                &&\n                inputList.map((x, i) => { \n                return (\n                    <div>\n                        <Row gutter={24}>\n                            <Col span={2}>\n                                {inputList.length !== 1 && <Button size=\"large\" onClick={() => handleRemoveClick(i)} danger>Remove</Button>}\n                            </Col>\n                            <Col span={6}>\n                                <Select\n                                    showSearch\n                                    placeholder=\"Select an item\"\n                                    optionFilterProp=\"children\"\n                                    size=\"large\"\n                                    style={{ width: 300 }}\n                                    onSelect={e => handleSelectedItem(e, i)}\n                                    value={x.item_name}\n                                    name=\"id\"\n                                >\n                                    <>\n                                        {data.map((item) => (<Option key={item.id}>{item.item_name} </Option>))}\n                                    </>\n                                </Select>\n                            </Col>\n                            <Col span={4}>\n                                <Input name=\"quantity\" size=\"large\" suffix={x.item_unit} value={x.quantity} onChange={e => handleInputChange(e, i)} disabled={!x.item_name}/>\n                            </Col>\n                            <Col span={4}>\n                                <Input name=\"rate\" size=\"large\" prefix={(x.item_unit===\"\") ? \"\" : \"₹\"} suffix={(x.item_unit===\"\") ? \"\" : \" / \"+ x.item_unit} value={x.rate} onChange={e => handleInputChange(e, i)} disabled/>\n                            </Col>\n                            <Col span={4}>\n                                <Input name=\"discounted_rate\" placeholder= \"Optional\" size=\"large\" prefix={(x.item_unit===\"\") ? \"\" : \"₹\"} suffix={(x.item_unit===\"\") ? \"\" : \" / \"+ x.item_unit} value={x.discounted_rate} onChange={e => handleInputChange(e, i)} disabled={!x.item_name}/>\n                            </Col>\n                            <Col span={4}>\n                                <Input name=\"subtotal\" size=\"large\" prefix={(x.item_unit===\"\") ? \"\" : \"₹\"} value={x.subtotal} onChange={e => handleInputChange(e, i)} disabled/>\n                            </Col>\n                        </Row>\n                        <br/>\n                        <br/>\n                        {inputList.length - 1 === i && <Button type=\"primary\" size=\"large\" onClick={handleAddClick} style={{width:\"100%\", background: \"#12cc18\", borderColor: \"#12cc18\", height: \"50px\"}}>Add</Button>}\n                    </div>\n                );})\n            }\n            <br/>\n            <br/>\n            <Row gutter={24}>\n                <Col span={2}/>\n                <Col span={6}/>\n                <Col span={4}/>\n                <Col span={4}/>\n                <Col span={4} style={{textAlign: \"right\", fontSize: \"30px\"}}>\n                    <b>Total</b>\n                </Col>\n                <Col span={4} style={{textAlign: \"right\", fontSize: \"30px\"}}>\n                    <b> ₹ {total}</b>\n                </Col>\n            </Row>\n            <br/>\n        </div>\n    );\n}\n\nexport default Sales;\n\n\n\n\n\n","import 'antd/dist/antd.css';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n// import AdminHome from './components/AdminHome';\nimport Sales from './containers/Sales';\n\n\nfunction App() {\n  return (\n    <div>\n      <Router>\n        <Switch>\n          {/* <Route exact path='/' component={AdminHome} /> */}\n          <Route exact path='/' component={Sales} />\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}